name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'

            - name: Cache Composer dependencies
              uses: actions/cache@v4
              with:
                  path: vendor
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-files
                  path: |
                      vendor/
                      composer.lock
                  retention-days: 1

    coding-standards:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Minimal setup
              uses: ./.github/actions/common-minimal-setup

            - name: Run PHP_CodeSniffer
              run: vendor/bin/phpcs

    architecture:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Minimal setup
              uses: ./.github/actions/common-minimal-setup

            - name: Run Deptrac
              run: vendor/bin/deptrac analyse

    static-analysis:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Minimal setup
              uses: ./.github/actions/common-minimal-setup

            - name: Run PHPStan
              run: vendor/bin/phpstan analyse

    unit-tests:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Minimal setup
              uses: ./.github/actions/common-minimal-setup

            - name: Run Unit Tests
              run: vendor/bin/phpunit --group unit

    integration-tests:
        runs-on: ubuntu-latest
        needs: [coding-standards, architecture, static-analysis, unit-tests]
        services:
            mysql:
                image: mysql:9.1
                env:
                    MYSQL_ROOT_PASSWORD: root_password
                    MYSQL_DATABASE: shop_system_auth
                    MYSQL_USER: shop_user
                    MYSQL_PASSWORD: shop_password
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping --silent"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

            redis:
                image: redis:7.4
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd="redis-cli ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

            elasticsearch:
                image: docker.elastic.co/elasticsearch/elasticsearch:8.18.0
                env:
                    discovery.type: single-node
                    bootstrap.memory_lock: true
                    ES_JAVA_OPTS: -Xms512m -Xmx512m
                    xpack.security.enabled: false
                ports:
                    - 9200:9200
                options: >-
                    --health-cmd="curl http://localhost:9200/_cluster/health"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=10

            rabbitmq:
                image: rabbitmq:4.1-management
                ports:
                    - 5672:5672
                    - 15672:15672

            mailhog:
                image: mailhog/mailhog
                ports:
                    - 8025:8025
                    - 1025:1025

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Total setup
              uses: ./.github/actions/common-total-setup

            - name: Run Integration Tests
              run: |
                  set -a
                  source .github/.env.pipeline
                  set +a
                  vendor/bin/phpunit --group integration

    application-tests:
        runs-on: ubuntu-latest
        needs: [coding-standards, architecture, static-analysis, unit-tests]
        services:
            mysql:
                image: mysql:9.1
                env:
                    MYSQL_ROOT_PASSWORD: root_password
                    MYSQL_DATABASE: shop_system_auth
                    MYSQL_USER: shop_user
                    MYSQL_PASSWORD: shop_password
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping --silent"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

            redis:
                image: redis:7.4
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd="redis-cli ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

            elasticsearch:
                image: docker.elastic.co/elasticsearch/elasticsearch:8.18.0
                env:
                    discovery.type: single-node
                    bootstrap.memory_lock: true
                    ES_JAVA_OPTS: -Xms512m -Xmx512m
                    xpack.security.enabled: false
                ports:
                    - 9200:9200
                options: >-
                    --health-cmd="curl http://localhost:9200/_cluster/health"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=10

            rabbitmq:
                image: rabbitmq:4.1-management
                ports:
                    - 5672:5672
                    - 15672:15672

            mailhog:
                image: mailhog/mailhog
                ports:
                    - 8025:8025
                    - 1025:1025

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Total setup
              uses: ./.github/actions/common-total-setup

            - name: Run Integration Tests
              run: |
                  set -a
                  source .github/.env.pipeline
                  set +a
                  vendor/bin/phpunit --group application
