apiVersion: apps/v1
kind: Deployment
metadata:
    name: backend
    namespace: shop-system-prod
    labels:
        app.kubernetes.io/name: shop-system
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: prod
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/component: backend
    template:
        metadata:
            labels:
                app.kubernetes.io/name: shop-system
                app.kubernetes.io/component: backend
                app.kubernetes.io/instance: prod
        spec:
            initContainers:
                - name: setup-code
                  image: maciekiwaniuk/shop-system-backend:latest
                  command: ["cp", "-a",  "/var/www/.", "/app"]
                  volumeMounts:
                      - name: app-code
                        mountPath: /app
            volumes:
                -   name: app-code
                    emptyDir: { }
            containers:
                - name: backend
                  image: maciekiwaniuk/shop-system-backend:latest
                  ports:
                      - containerPort: 9000
                  envFrom:
                      - configMapRef: { name: backend-config }
                      - secretRef:    { name: backend-secrets }
                  volumeMounts:
                      - name: app-code
                        mountPath: /var/www
---
apiVersion: v1
kind: Service
metadata:
    name: backend
    namespace: shop-system-prod
    labels:
        app.kubernetes.io/name: shop-system
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: prod
spec:
    type: ClusterIP
    selector:
        app.kubernetes.io/component: backend
    ports:
        - protocol: TCP
          port: 9000
          targetPort: 9000
