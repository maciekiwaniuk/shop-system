parameters:
    redis_url: '%env(REDIS_URL)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Module/Auth/Domain/Entity'
            - '../src/Module/Commerce/Domain/Entity'
            - '../src/Kernel.php'

    App\Module\Commerce\Domain\Repository\OrderRepositoryInterface:
        class: 'App\Module\Commerce\Infrastructure\Doctrine\Repository\OrderRepository'
    App\Module\Commerce\Domain\Repository\ProductRepositoryInterface:
        class: 'App\Module\Commerce\Infrastructure\Doctrine\Repository\ProductRepository'
    App\Module\Auth\Domain\Repository\UserRepositoryInterface:
        class: 'App\Module\Auth\Infrastructure\Doctrine\Repository\UserRepository'

    App\Module\Auth\Application\EventSubscriber\AuthenticationSuccessSubscriber:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 255 }

    App\Module\Auth\Application\EventSubscriber\AuthenticationFailureSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    App\Common\Infrastructure\Cache\CacheCreator:
        arguments:
            $redisUrl: '%redis_url%'

    App\Module\Commerce\Application\Command\CreateOrder\CreateOrderCommandHandler:
        arguments:
            $commerceEntityManager: '@doctrine.orm.commerce_entity_manager'

    App\Module\Commerce\Application\Command\UpdateProduct\UpdateProductCommandHandler:
        arguments:
            $commerceEntityManager: '@doctrine.orm.commerce_entity_manager'

imports:
    - { resource: 'services/commands.yaml' }
    - { resource: 'services/queries.yaml' }
