framework:
    messenger:
        transports:
            sync:
                dsn: 'sync://'
            async:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
            payments_events:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                serializer: 'App\Module\Commerce\Infrastructure\Messaging\PaymentsEventSerializer'
                options:
                    exchange:
                        name: commerce.payments_events
                        type: topic
                    queues:
                        payments_events_queue:
                            binding_keys:
                                - transaction_completed
                                - transaction_canceled

        routing:
            'App\Module\Auth\Application\Command\SendWelcomeEmail\SendWelcomeEmailCommand': async
            'App\Module\Auth\Application\Command\SetUserAsAdmin\SetUserAsAdminCommand': sync
            'App\Module\Auth\Application\Command\CreateUser\CreateUserCommand': sync
            'App\Module\Auth\Application\Query\FindUserByEmail\FindUserByEmailQuery': sync

            'App\Module\Commerce\Application\Command\ChangeOrderStatus\ChangeOrderStatusCommand': sync
            'App\Module\Commerce\Application\Command\CreateOrder\CreateOrderCommand': sync
            'App\Module\Commerce\Application\Command\CreateProduct\CreateProductCommand': sync
            'App\Module\Commerce\Application\Command\DeleteProduct\DeleteProductCommand': sync
            'App\Module\Commerce\Application\Command\UpdateProduct\UpdateProductCommand': sync
            'App\Module\Commerce\Application\Query\FindClientByEmail\FindClientByEmailQuery': sync
            'App\Module\Commerce\Application\Query\FindOrderByUuid\FindOrderByUuidQuery': sync
            'App\Module\Commerce\Application\Query\FindProductById\FindProductByIdQuery': sync
            'App\Module\Commerce\Application\Query\FindProductBySlug\FindProductBySlugQuery': sync
            'App\Module\Commerce\Application\Query\GetPaginatedOrders\GetPaginatedOrdersQuery': sync
            'App\Module\Commerce\Application\Query\GetPaginatedProducts\GetPaginatedProductsQuery': sync
            'App\Module\Commerce\Application\Query\FindClientById\FindClientByIdQuery': sync
            'App\Module\Commerce\Application\Event\Payments\TransactionCompletedEvent\TransactionCompletedEvent': payments_events
            'App\Module\Commerce\Application\Event\Payments\TransactionCanceledEvent\TransactionCanceledEvent': payments_events

when@test:
    framework:
        messenger:
            transports:
                async: 'sync://'
